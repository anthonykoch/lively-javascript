$$LE__(0, this);
$$LE__(1), 42;
$$LE__(2, user);
$$LE__(3), [];
$$LE__(4, bar.baz);
$$LE__(5, bar['baz']);
$$LE__(6, new Bar());
$$LE__(7), 'bar';
$$LE__(8), NaN;
$$LE__(9), undefined;
{}
;
$$LE__(10), void bar;
$$LE__(11, +bar);
$$LE__(12, -bar);
$$LE__(13, ~bar);
$$LE__(14, !bar);
$$LE__(15, bar + baz);
$$LE__(16, bar - baz);
$$LE__(17, bar / baz);
$$LE__(18, bar * baz);
$$LE__(19, bar % baz);
$$LE__(20, bar ** baz);
$$LE__(21, bar in baz);
$$LE__(22, bar instanceof baz);
$$LE__(23, bar < baz);
$$LE__(24, bar > baz);
$$LE__(25, bar <= baz);
$$LE__(26, bar >= baz);
$$LE__(27, bar == baz);
$$LE__(28, bar != baz);
$$LE__(29, bar === baz);
$$LE__(30, bar !== baz);
$$LE__(31, bar << baz);
$$LE__(32, bar >> baz);
$$LE__(33, bar >>> baz);
$$LE__(34, bar & baz);
$$LE__(35, bar | baz);
$$LE__(36, bar ^ baz);
$$LE__(37, ($$LE__(38), bar) && ($$LE__(39), baz));
$$LE__(40, ($$LE__(41), bar) || ($$LE__(42), baz));
$$LE__(43, bar ? baz : qux);
$$LE__(44, bar = baz);
$$LE__(45, bar *= baz);
$$LE__(46, bar /= baz);
$$LE__(47, bar %= baz);
$$LE__(48, bar += baz);
$$LE__(49, bar -= baz);
$$LE__(50, bar <<= baz);
$$LE__(51, bar >>= baz);
$$LE__(52, bar >>>= baz);
$$LE__(53, bar &= baz);
$$LE__(54, bar ^= baz);
$$LE__(55, bar |= baz);
$$LE__(56, bar = baz);
$$LE__(57, (bar, baz));
$$LE__(58, (bar, baz));